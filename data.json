{
    "Discuss about Tricentis Tosca.": " Tosca is now one of the market leader as a test automation tool which has \nthe ability to automate all kind of applications. It allows to design script -less \nautomated tests. \nimportant features of Tosca: \n1. Fast execution and capable of Continuous testing approach to support \nDevOps \n2. Supports module based test development which maximize the usage of \nreusability. \n3. Required minimum maintenance efforts. \n4. Ability to integrate with major third party tools. \n5. Test development is easy as it follows script less test automation.",
    "Tell me the major components of Tosca?": " The important components which are available in Tosca are – \n1. Tosca Commander. \n2. Tosca Executor. \n3. Tosca ARA (Automation Recording Assistant) \n4. Tosca Wizard \n5. Test Repository. \n6.",
    "Explain the advantages of Tosca as a test automation tool?": " The benefits provided by Tosca automation tool mentioned below: \n1. One tool combines many features. \n2. Supports script -less test a utomation. \n3. Test management. \n4. Bulk updates are possible. \n5. Assets can be reused. \n6. Compatible with different platforms. \n7. It follows model -based testing approach.",
    "Define TOSCA Commander?": " The Tosca commander is the UI interface of the tool which allow users \nto design, maintain, execute and analyze the test cases. So, it is the core \nbackbone of the Tosca Test suite. The Tosca commander build with different \nsections such as Requirement, Modules, Test Case, Test script Design, \nExecution, and Reportin g, etc. \n (Tosca Commander) Tosca Interview Questions and Answers",
    "How to execute test scripts from Tosca ExecutionLists?": " The different approaches of Tosca test executions are mentioned below – \n1. Using the shortcut key F6, the execution can be initiated. \n2. Right -click on the selected test cases and select the “Run” option. \n3. Select and run the ExecutionLists. \n4.",
    "What are the different components available in TOSCA?": " There are four different components available in Tosca \n1. Tosca Commander \n\n2. Tosca Executor \n3. Tosca Wizard \n4. Test Repository \n5.",
    "How to execute test scripts from Tosca ScratchBook?": " We can perform trial run of the newly created or enhanced test cases \nthrough the ScratchBook to check the correctness. The Tosca logs the \nexecution results in ScratchBook for temporary purposes. The entire or part of \ntest cases(i.e. test steps) can be executed through ScratchBook. \nTwo options are available to execute the testcases from scratch books which \nare explained below – \n1. Can be executed at any time. \n2. We can organize the test cases in scratchbook before execution. \n3.",
    "Is it possible to integrate Tosca with Jira?": " JIRA is a test management tool. By integrating with JIRA, we can \nmanages the bug or issues which are raised in Tosca. So, if there is any new \nissues are raised in TOSCA, same will be synched to JIRA through the \ninterface.",
    "Explain the benefits of Tosca integration with Jira?": " The benefits of Tosca Jira integration are mentioned below – \n1. Synchronizes failed tests from Tosca. \n2. The bug can be raised in JIRA automatically after the execution failure \nin Tosca. \n3. Enables the DevOps process. \n4. The cross -tool traceability can be achieved. \n5.",
    "What are the different types of errors which can occurs in Tosca?": " Three types or errors can appear during Tosca execution. \n1. Verification -Failure: It appears when expected and actual results are \nnot matched for the verification step. \n2. User Abort: It appears when the execution has been stopped by the \ntester. \n3. Dialog -Failure: It appears due to some unhandled exceptions or steps.",
    "Explain Tosca Testsuite?": " Tosca is now one of the market leader as a test automation tool which has \nthe ability to automate all kind of applications. It allows to design script -less \nautomated tests. \nimportant features of Tosca: \n1. Fast execution and capable of Continuous testing approach to support \nDevOps \n2. Supports module based test development which maximize the usage of \nreusability. \n3. Required minimum maintenance efforts. \n4. Ability to integrate with major third party tools. \n5. Test development is easy as it follows script less test automation. \n6.",
    "How can you read data from Excel using Tosca?": " The excel data can be read with the help of either of the below approaches \n– \n1. In Test Case Design approach of TOSCA, data can be read from the \nexternal excel file with predefined format. \n2. The “Excel Engine” allows to import and read from excel file. \n3.",
    "Is it possible to launch multiple browsers in TOSCA?": " It is not possible to launch multiple browsers in Tosca. But it can be \nachieved by following below steps – \n The Test Case Parameter(TCP) with the name “Browser” need to add testcase, \nroot folder, or execution list level. \n Using the “Browser” values as InternetExplorer, Firefox, or Chrome, the \ncorresponding web browsers will be launched.",
    "How to perform data -driven testing in Tosca?": " The data driven test automation is possible with the help of TCD (Test \nCase Design). The test sheet of TCD represents the the template where we can \ncreate the instances which are representing the test data for individual test \ncases. Again, we can create the attributes with in test sheet that represent the \neach data parameters and the data values can be created with in attribute as \ninstances with in it. \nFor data reusability, we can define classes. After creation of TCD, the test \nsheets with different data sets can be mapped with template test case from \nwhere we can generate different test cases based on the different data. The test \ncase creation process is known as instantiation of the template test cases.",
    "How  to launch  more  than  one browser  in Tricentis  TOSCA?": "  Launching multiple browsers is not possible in TOSCA. But the user can \nachieve cross -browser execution.   \nTo perfor m cross -browser execution, users need to follow the below steps:   \n1. A Test Configuration Parameter “Browser” should be designed either at \nTestCase or its Parent Levels.  \n2. Users can choose the value as InternetExplorer, Firefox, Chrome.  \n3. The individual browsers will trigger executions.",
    "What  are the different  status  available  after  post-execution  in \nTosca?": "  By default, Tosca provides four different states after test execution. \nThose are – \n1. Passed  \n2. Failed  \n3. No result  \n4.  Error",
    "Explain  the limitations  of TOSCA  ScratchBook?": "  The temporary execution logs are stored in ScratchBook. During the test \ndevelopment, we used this option for temporary execution to check the script \ncorrectness.  \nIf the action within a test step is executed repeatedly , the details will not be \navailable. Also, the execution logs are not available permanently.",
    "Explain  the benefits  of linking  Tosca  test cases  with  requirements?": "  The main purpose is the ensure the coverage of the testing based on the \nrequirements. It will provides a high level picture of requirement coverage for \ntest analysis.",
    "Explain  the template  and process  to create  it?": "  The templates in Tosca defines a unique test flow with the help of \nmodules. Instead of actual data, the  data parameters from the TCD are linked \nwith. Generally, the template is nothing but something in a conventional \nformat. The Technical test case can be converted to the template by right -\nclicking on it. The template uses the data from TCD datasheet.",
    "Explain  the advantages  of specifications  which  is associated  with  \nTosca  test cases?": "  The specifications can be linked to test cases to track the requirement \ncoverages. It will provides a high level picture of requirement coverage for test \nanalysis.",
    "Explain  Test Data  Management.": "  Test data management enables you to deal with the test data necessary \nfor test execution. The data driven test automation is possible with the help of \nTCD (Test Case Design). The test sheet of TCD represents the the template \nwhere we can create the instances which are representing the test data for \nindividual test cases. Again, we can create the attributes with in test sheet that \nrepresent the each data parameters and the data values can be created with in \nattribute a s instances with in it.  \nFor data reusability, we can define classes. After creation of TCD, the test \nsheets with different data sets can be mapped with template test case from \nwhere we can generate different test cases based on the different data. The test  \ncase creation process is known as instantiation of the template test cases.",
    "What  is String  Operations  in Tosca?": "  String operations are utilized for verifying or changing the strings with \nregular expressions. It features count specific character/ word from the \nannouncement, aligning a word with another word, confirming the structure of \na number, etc. You ought to have a module AidPack downloaded and \ndownloaded on your endeavor to execute String operations.",
    "Why  SratchBook  is required  in Tricen tis TOSCA?": "  We can perform trial run of the newly created or enhanced test cases \nthrough the ScratchBook to check the correctness. The Tosca logs the \nexecution results in ScratchBook for temporary purposes. The entire or part of \ntest cases(i.e. test s teps) can be executed through ScratchBook.",
    "What  is exploratory  testing  Tosca?": "  Exploratory is an approach to record the test scenario will navigating the \nscenario manually. It records the screen shots with technical information and \ngenerates a pd f file at the end. This document can be used for future references \nand training purposes.",
    "Describe  the organizational  units  of the testing  procedures  in Tricentis  \nTosca?": "  The automated testing in TOSCA contains below organizational units.  \n1. Planning.  \n2. Specification.  \n3. Execution.  \n4. Logging.  \n5. Analysis.",
    "Describe  the purpose  of “Tosca  Query  Language”(TQL)?": "  The TQL is the shorter form of Tosca Query Language which is used for \nadvance searching purposes in Tosca. Conceptually, this is similar to SQL that \nmeans we can searched based on the conditions.",
    "Is it possible  to compare  pdf using  Tricentis  Tosca?": "  Tosca allows users with a standard module to perform a comparison of \npdf files. After the comparison of two pdf files, the mismatches will be \navailable in execution logs.",
    "What  is Tosca  CI? How  does  the user execute  test scripts  using  CI \nTool?": "  CI stands for continuous integration. TOSCA is able to ex ecute the \ntestcases through CI tools like Jenkins, Bamboo, etc. as part of continuous \ntesting. With the CI features, we can integrate with CI tools easily. After the \nintegration, test can be triggered through third party CI tools.  \nTosca Interview Questions -Tosca integration with CI tool",
    "What  are the loop-statements  used  in Tosca?": "  While we need to execute test steps repeatedly, the Tosca loop is used. \nTosca provides different loop structure such as Do, For, While loops, etc.",
    "What  do you mean  by Tosca  WebAccess?": "  The Tosca WebAccess is a web interface which allows to access the \nworkspace through the web browsers. The installation of Tricentis Tosca \nCommander is not required to work with workspaces through the WebAccess.  \nThe workspace s erver system stores the data of workspaces and using the client \nbrowsers, we can access it.",
    "Explain  the usage  of Tosca  API Scan?": "  The API scan feature of Tosca allows to create the modules after scanning \nthe API for a specific system. Basically, i t enables to automate and design the \nAPI Test Cases.",
    "What  is Tosca  QC / ALM  Integration?": "  The HP Quality Center (name of the latest release is ALM) is a test \nmanagement tool which manages the test development, execution and defect \ncycles. Tricent is Tosca allows to integrate with Quality Center with minimum \ncustomization. The main purposes of the integration are to manage the test \n\nexecutions and the defect managements. The execution data and the defect \ndetails will be synched between both the tool through the integration.",
    "Explain  the Tosca  test configuration  parameters.": "  The test configuration parameters (TCPs) can be used for parametrized \nthe test data for configuration related activities i.e. ideally it should be used for \nthose parameter s which will be applicable across the entire test suites. Tosca \nprovides some in -build TCPs which are used to change the default \nconfiguration of the Tricentis Tosca. The user defined TCPs can be created for \nthe below specified objects – \n1. Project root element  \n2. ExecutionList  \n3. Test Case  \n4. ExecutionEntry  \n5. ScratchBook  \n6. Component folder  \n7. Configurations folder  \n8. Any Subfolders available in TestCase, TestCase -Design or Execution \nSections.  \n9.",
    "How  to integrate  Tosca  Connect  with HP ALM?": "  \n1. Install Rest API.    \n2. Install Tasktop in the test system with the License.  \n3. Do test script synchronization with Test Plan Module in HP ALM from \nTOSCA.   \n4. Synchronize the execution list with the test lab module in HP ALM from \nTOSCA.   \n5. Sync the latest execution logs, available in Tos ca ExecutionList with \ntestset which is available in ALM Testlab.  \n6.",
    "What  are the modes  of TC Shell.": "  The TOSCA commander administrator uses TC shell, and there are two \ndifferent methods of starting TC Shell.  \n1. Interactive  mode : The interactive mode favor by new and intermediate \nusers, assists the user with help and options. The complete Tosca \ncommander GUI functionalities can be access through the interactive \nmode.  \n2. The script  mode:  This is the lite version of Tosca GUI can be v isible \nwhich involves minimum interaction. It’s used for execution of scripts \nin automated mode.  \n3.",
    "What  is Synchronization  in Tricentis  Tosca?": "  Synchronization is a process that matches the application momentum \nwith automation tool momentum. The A ctionMode “WaitOn” is used to handle \nthe synchronization in a dynamic approach. Until the satisfaction of the \ncondition, provided as TestStepValue for “WaitOn”, the Tosca test will wait \nfor a pre -configured timeout value. The synchronization setting can be  altered \nfrom the settings – “Go to settings ->TBox ->synchronization”.",
    "How  to check  the existence  of a file in Tosca?": "  With the help of standard module “TBox File Existence,” we can verify \nthe existence of any specified file. This module has below attributes – \n1. Directory  – The location of the test file.  \n2. File -Name of the test file.",
    "How  many  types  of logs available  in Tosca?": "  Two types of logs are available in Tosca after the test execution. Those \nare – \n1. ActualLog:  It keeps the la test execution results and the execution \nhistory.  \n2. ExecutionLog:  By selecting the option “Archive actual ExecutionLog”, \nthis type of logs are generated.   \n3.",
    "What  is BDD  in TOSCA?": "  BDD is stand for Behavior Driven Development which follows agile \nmetho dology grounded software development process. The process is works \nas per the Test Driven Development.  \nBDD does not generate workable test cases but workable documentation. Here, \nthe actions and behavior are explained as texts. This permits them to be tested \nas workable documentation. Requirements are depicted as user stories.",
    "What  is the purpose  of ActionMode  Constraint?": "  The ActionMode value “Constraint” is used to search for the specified \nvalues. For example – we can search a specific column value in a table with \nthe help of “Constraint” easily.",
    "What  are the Default  object  components  in TOSCA?": "  During the Tosca workspace creation window, the default objects are \neither auto incorporated or need to added manually using import subset option.  \nThe default components are kept in standard.tce file which is available in the \nfolder “%TRICENTIS_PROJECT% \\ToscaCommander”.  \nThe default components which are associated with the file are – \n1. Standard  modules  – All kind of default modules  available which can \nbe used to steer different applications, include TBox XEngines and TBox \nAutomation Tools.  \n2. Virtual  folders.  \n3. Standard  Reports.  \n4.",
    "What  is Damage  class?": "  This class is used to calculate the damage values for any specific events. \nThis is calculated based on damages in terms of cost. The range of this values \nare between 0 to 10 (min to max).",
    "What  is Frequency  class?": "  This class is used to calculate the damage values for any specific events. \nThis is calculated based  on damage quantity in terms of frequency. The range \nof this values are between 0 to 10 (min to max).",
    "Discuss  the manual  test case template  creation  steps  in Tosca?": "  Users can design the TestCase templates using the anticipated sections of \nSample s.tce subset and Tosca BI Modules. We need to follow below steps to \ncreate TestCase template – \n1. Create a TestCase according to the user’s requirements.   \n2. We can convert technical test case into template by selecting context menu \noption “Convert to Template” after right -clicking on test case.  \n3. Drag and drop the appropriate TestSheet onto the desired TestCase \nTemplate.  \n4. Assign the TestSheet attributes ( data parameter) for the required \nTestStepValues using XL tag.  \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nTosca  Interview  Questions  for Advanced  level",
    "Explain  the merits  of Tricentis  Tosca?": "  The main advantages of Tosca as a test automation tool, are specified \nbelow – \n1. Allows script -less test automation approach.  \n2. Easy to learn the tool with very minimum skillset.  \n3. Test automation can be initiated at the very early phase of testing.  \n4. Supports the model -based test automation framework. So, it’s not \nrequired to spent efforts on test framework creation.  \n5. High scale of reusability approach can be utilized  with the help of \ncomponents like Modules, Reusable TestStepBlock, TCD, etc.  \n6. The tool itself supports the test management and functional testing \nactivities.  \n7. ALM integration is possible.  \n8. Can trigger the selenium testcases from Tosca.  \n9. Mass update is possible  with the help of TQL.  \n10.",
    "Is API Testing  possible  with  Tosca?": "  Yes, Tosca supports the API Testing. The API Scan is used to scan create \nthe modules for the corresponding APIs. Using the API modules we can send \nthe request and receive the response fo r the API call.",
    "How  to use multiple  web browsers  within  the same  test case using  \nTosca?": "  Users want to automate a test script pass over different applications that \nexecute on other browsers. Using buffers, changing the Test Configuration \nParamete rs at execution time by the below methods.  \n1. Alternating the value of test ordering Parameter to {B[Browser]} or any \nother Buffer Name user prefers.   \n2. During the execution, we can change the buffer value using “TBOX Set \nBuffer” module to change the value of “Browser” test configuration parameter \naccording to the browser name to launch.",
    "What  is TOSCA  Classic  Engine?": "  The Classic or Base engine is responsible to the test execution. Base \nengine follows the architecture of the test cases which are managed as \nbusiness -based objects. The business -based object information and activities \nto steer the controls, which are rela ted to test scripts, are accepted by the \nClassic engine.",
    "What  are the steps  required  in Object  Steering  in Tosca?": "  There are two steps involved in Object Steering:  \n1. Object access.  \n2. Object steering.  \n3.",
    "Discuss  Tosca  Model -Based  Testing?": "  The models represent the unit of functionalities which are created by \nscanning the application. The modules contain the technical information of the \ncontrols to steer the test objects. Now, model -based testing explain the \napproach where test cases are develope d and executed based on the modules. \nBasically, modules are added into test case as a test step through drag -drop \napproach to complete the test cases. In the testcase, we need to provide the data \nas TestStepValue and actions. No scripting is required to de velop the test case.",
    "What  do you mean  by Distributed  Execution  in TOSCA?": "  When any user or Test wants to execute a large set of test scripts in \nmultiple machines, the tester must create TestEvents in Tosca commander.",
    "Describe  Test Data  Mana gement  (tdm)?": "  The Test data Management(TDM) components are used to managing the \ntest data which are required for test execution. The TDM component is \navailable with the standard Tosca installation. The data are stored same as \nshared database repositor y which is used to create the workspace, through the \nTDM which will be assigned to test cases during the execution. In case of \nSQLite, the separate instance of database is required for TDM.",
    "How  to run Tests  using  ScratchBook?": "  We can perform tria l run of the newly created or enhanced test cases \nthrough the ScratchBook to ensure the correctness. The Tosca logs the \nexecution results in ScratchBook for temporary purposes. The entire or part of \ntest cases(i.e. test steps) can be executed in ScratchBoo k. \nAfter right -clicking on one or more selected test cases, test case folders or test \nsteps, we can initiate the execution by selection of option from context -menu.",
    "What  is the use of TestMandates?": "  There are many scenarios like banking, insurance, etc. domain projects; \nwe required a batch to be run at a specific time. This requirement can be \nfulfilled using TestMandates. The test mandate allows to execute different \nparts of execution list parallelly with out locking the main execution lis t.",
    "Discuss  the steps  to instantiate  TestCases  using  Excel?": "  The process instantiating means to generate the instance test cases from \nthe template based on the different data which are defined in “TestCase \nDesign” section or in excel template.  \nBelow are the steps to instantiate TestCases with excel:  \n1. The template test case is required to create instance test cases.  \n2. The the data sheet attributes which are defined in TCD or external excel \ntemplate, i.e. the data parameters have to be linked with  template attribute with \nthe correct syntax.  \n3. Right -click on the template testcase and select the context menu option \n“Create TemplateInstance” to start the process.  \n4. The excel sheet with predefined structure, has to be displayed in the \nsubsequent dial og.  \n5. Handle the authentication dialogue and proceed.  \n6. Next, click on OK button to start the process.",
    "Describe  Instantiating  Template?": "  he process instantiating means to generate the instance test cases from \nthe template based on the different  data which are defined in “TestCase \nDesign” section. This approach in Tosca, is also known as data -driven testing.",
    "What  do you mean  by business  parameters  in Tosca?": "  The business parameters are use to pass the data into a Reusable \nTestStepBlock as arguments. The primary purpose of the business parameters \nis to parameterized the use of test data in Reusable TestStepBlock instead of \nusing hard coded data. It can be created after right -clicking on the selected \nReusable TestStepBlock which is created  in Library folder.",
    "Explain  about  TC-Shell?": "  TC-Shell allows to control the Tosca commander from the command line. \nIt can be launched in two unique manners using interactive and script.  \n1. A group of commands which are written in a flat file (such as bat file), \ncan mange some operation such as execution of tests from execution with \nout opening the Tosca Commander. This approach is used to automate \nthe triggering of test execution process.  \n2. Users may use the comprehensive selection of purposes o f the GUI \nversion from the Tosca commander.  \n3.",
    "Explain  the steps  that create  test cases  through  ARA?": "  The process steps are – \n• Record any scenario using ARA Wizard.  \n• Add verification points during recording and perform clean up on the \nrecorded scenari o. \n• Export the recording.  \n• Import recording in Tosca.  \n• Execute test cases which are auto -created during recording.  \n•",
    "Specify  the different  approaches  for object  identification  in Tosca?": "  The different approaches to steer the controls during the scanni ng, for \nany test objects are mentioned below - \n1. Identify by properties  \n2. Identify by Anchor  \n3. Identify by index  \n4. Identify by image  \n5.",
    "What  is DokuSnapper  in Tosca?": "  The DokuSnapper  function enables to an archive of the progress of \nautomated tests in a document.  Tosca  creates a Microsoft Word document for \nevery test script upon each execution. The document name consists of the test \nscript name and the timestamp of the execution time.   \nUser can enable Dokusnapper from Settings   \nConfigure options and setti ngs > Settings Dialog  > Settings – Engine  > \nSettings – DokuSnapper",
    "What  is TDS?": "  TDS stands for Test Data Service, which is used for test data management \nin Tosca. Using TDS, we can store the dynamic test data in a shared location \nwhich is easy to  read/ update by the test case. As the data stored in a shared \nlocation, it is useful to share the same dynamic data across multiple test cases. \nAlso, we can update it without opening Tosca as it’s treated as a separate \ncomponent.",
    "Explain  the API Testing using  TOSCA?  Explain  the advantages.": "  API stands for Application Interface. In a multi -application environment \nwhere one application is interacting other application through API, we have to \nwait for the completion of development of all the applica tion for testing. So the \ntesting is going to be a time -consuming process. Instead of that, we can start \nthe testing of APIs once any of the application is ready to reduce the execution \ncycle time. So API testing is an approach to test the interface through  API \nbefore integration of the entire application. Tosca provides an API scanning \nwizard; through this, we can scan the API and creates API modules. Later \nbased on the module, we can create test cases to perform Tosca API Testing.  \nThe advantages are – \n• Fast execution.  \n• Reduce execution cycle time.  \n• Testing can be initiated before system integration.  \n•",
    "Explain  the exploratory  testing  features  available  in Tosca?": "  It’s an approach to record test scenarios as a document for functional \nanalysis, verificati on/ testing of training purpose.",
    "How  can we change  the value  of any Test Configuration  Parameter  \nduring  the execution?": "  First, one buffer has to be assigned for the Test Configuration Parameter \n(TCP). After that, by changing the buffer value using “Tbox Set Buffer”, we \nwill be able to change the TCP value during execution.",
    "Is it possible  to automate  mobile  apps  in Tosca?": "  Yes, Tosca supports mobile automation using engine  ME3.0  for mobile \ntesting.",
    "Explain  the approach  of mobile  testing?": "  We need to follow the below steps to perform mobile automation.  \n• We need to connect the physical or simulator mobile device with our \nsystem or Appium server. For an iOS device, we need to connect the \ndevice in Appium configured Mac system.  \n• Select the  Scan ->Mobile  option while scanning mobile devices.  \n• In the scan window, we need to provide basic details such as Connection \ntype as Local or Appium Server, Name of the device, Device Id and \ndevice type as Android or iOS.  \n• We need to select the check box for “Run Live View” to replicate mobile \nscreen in the device.  \n• To establish the connection with mobile devices, need to click on \n“Connect” button.  \n• Select the desire mobile screen and scan to create nodule.  \n• Create the mobile test cases based on the creat ed modules and some \nstandard modules such as an open mobile app.  \n• Execute the test case.  \n•",
    "What  kinds  of mobile  apps  are supported  by Tosca?": "  Only Android or iOS mobile devices are supported by Tosca. Also, it can \nautomate mobile web, native and hyb rid apps.",
    "What  are the different  engine  available  for mobile  automation?": "  There is two engines are available – \n1. Tosca Mobile + – It’s used for old devices.  \n2. Mobile Engine 3.0 (ME 3.0) – It’s used for the latest devices.  \n3.",
    "What  is the basic  configuration  required  to execute  any test case in \nmobile  Chrome  browser?": "  We need to set the value as “CromeAndroid” for TCP  Browser .",
    "What  is ARA?": "   ARA stands for Automation Recording Assistant. This is an advanced \nrecording feature of TOS CA. With the help of ARA, we can record any \nscenario with the verification and generate the test cases instantly. After \nrecording ARA generates a .ara file which needs to be imported in TOSCA to \ngenerate the instant test case. This is very useful for the b usiness user who does \nnot have any bits of knowledge about Tosca.",
    "Explain  the advantages  of ARA?": "  The major advantages are – \n• Standalone recording wizard  \n• Intuitive recording  \n• On-the-fly remarks & verifications  \n• No duplicate modules in a sing le recording  \n• Easy clean -up \n• Fast playback  \n• Easy to export & import recordings",
    "Explain  the limitations  of ARA?": "  The limitations of ARA are – \n• Compatible with Tosca 13.1 & above  \n• Linear recording  \n• License required for standalone installation  \n• Duplicate modules get created in multiple recordings  \n• Challenging to modify existing tests  \n• Yet to be compatible with Android/iOS",
    "What  is Vision  AI in Tosca?": "  It is going to be an advanced test automation approach to automate the \ntest cases irrespective of the technology of the test application. This approach \nwill be made with the help of the artificial intelligence (AI) concept while \nrecognizing the objects through TOSCA AI Scan. Based on looks and \nappearances, the objects are get ting identified using AI features.",
    "From  which  version  the Vision  AI is available?": "  The Tricentis Tosca has introduced these features from Version 14.x.",
    "What  are the features  of Vision  AI in Tosca?": "  The major features of Vision AI are sp ecified below – \n• AI-driven  Object  recognization  – Tosa AI engine is capable of \nidentifying the test objects based on the appearance and looks, without \nconsidering the technology of the application.  \n• Automate  Citrix -based  application  – We can automate the \napplications which are hosted in Citrix.  \n• Automate  under  development  application  – The AI engine is capable \nof automating the application before completion of the development. \nHere, Tosca is able to automate based on the mockup environment or \nbased on the d esigned layout diagram.  \n• Automation testing can be started from the very early phases.  \n• Larger varieties of applications can be automated.  \n• Some modules can be re -used over different applications (having the \nsame look and feel) irrespective of technology.  \n• Reduces the maintenance efforts in vision AI.  \n•",
    "How  Tosca  identifies  objects  using  AI Engine?": "  The Tosca AI engine considers below aspects to steer test objects – \n• The appearance and the position of the test objects.  \n• Look and feel includes color, size, etc.  \n• The attached labels of the test objects.  \n•",
    "What  will happen  for the existing  tests  which  are developed  through  \nAI Engine  after  changing  the technology,  keeping  the same  UI?": "  There will be no impact on the existing test cases which are de veloped \nwith an AI engine. The reason is that the AI engine does not consider the \ntechnology of the application.",
    "Specify  the different  object  identification  methods  used  by Tosca  AI \nEngine?": "  The Tosca AI engine follows below identification methods  – \n• Identify by Properties – The properties available based on the \nappearances.  \n• Identify by Index – Based on the repetitions of the same kind of objects."
}